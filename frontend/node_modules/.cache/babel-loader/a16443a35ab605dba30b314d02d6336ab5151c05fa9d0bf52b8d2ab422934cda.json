{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khali\\\\OneDrive\\\\Bureau\\\\bna\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Mock user data - change role to 'admin' to access admin dashboard\n  const [user, setUser] = useState({\n    id: 'client-1',\n    email: 'john.doe@email.com',\n    firstName: 'John',\n    lastName: 'Doe',\n    role: 'client',\n    // Change to 'admin' to access admin dashboard\n    status: 'active'\n  });\n  const [token, setToken] = useState('mock-token');\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    // Mock login - always succeeds\n    console.log('Mock login:', email);\n  };\n  const register = async userData => {\n    // Mock registration - always succeeds\n    console.log('Mock registration:', userData);\n  };\n  const logout = () => {\n    // Mock logout - doesn't actually do anything\n    console.log('Mock logout');\n  };\n  const isAuthenticated = true; // Always authenticated\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"heeA+82k0UEQ8COOjYSnj1wksEU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","id","email","firstName","lastName","role","status","token","setToken","loading","setLoading","login","password","console","log","register","userData","logout","isAuthenticated","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/khali/OneDrive/Bureau/bna/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  role: 'client' | 'admin';\r\n  status: 'active' | 'inactive' | 'suspended';\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  address?: string;\r\n  dateOfBirth?: string;\r\n  nationalId?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  // Mock user data - change role to 'admin' to access admin dashboard\r\n  const [user, setUser] = useState<User>({\r\n    id: 'client-1',\r\n    email: 'john.doe@email.com',\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    role: 'client', // Change to 'admin' to access admin dashboard\r\n    status: 'active',\r\n  });\r\n  const [token, setToken] = useState<string | null>('mock-token');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    // Mock login - always succeeds\r\n    console.log('Mock login:', email);\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    // Mock registration - always succeeds\r\n    console.log('Mock registration:', userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    // Mock logout - doesn't actually do anything\r\n    console.log('Mock logout');\r\n  };\r\n\r\n  const isAuthenticated = true; // Always authenticated\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n    isAuthenticated,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiC9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACI,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAO;IACrCc,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,oBAAoB;IAC3BC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,KAAK;IACfC,IAAI,EAAE,QAAQ;IAAE;IAChBC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAgB,YAAY,CAAC;EAC/D,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMwB,KAAK,GAAG,MAAAA,CAAOT,KAAa,EAAEU,QAAgB,KAAK;IACvD;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,KAAK,CAAC;EACnC,CAAC;EAED,MAAMa,QAAQ,GAAG,MAAOC,QAAsB,IAAK;IACjD;IACAH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,QAAQ,CAAC;EAC7C,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAJ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B,CAAC;EAED,MAAMI,eAAe,GAAG,IAAI,CAAC,CAAC;EAC9B,MAAMC,OAAO,GAAG,CAAApB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,MAAK,OAAO;EAEtC,MAAMe,KAAsB,GAAG;IAC7BrB,IAAI;IACJQ,KAAK;IACLI,KAAK;IACLI,QAAQ;IACRE,MAAM;IACNR,OAAO;IACPS,eAAe;IACfC;EACF,CAAC;EAED,oBACE9B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAChCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,GAAA,CA/CWF,YAAyC;AAAA8B,EAAA,GAAzC9B,YAAyC;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}