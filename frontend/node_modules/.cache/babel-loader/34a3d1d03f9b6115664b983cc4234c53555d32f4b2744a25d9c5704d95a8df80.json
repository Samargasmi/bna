{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khali\\\\OneDrive\\\\Bureau\\\\bna\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const userProfile = await authService.getProfile();\n          setUser(userProfile);\n          setToken(storedToken);\n        } catch (error) {\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      const {\n        access_token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      await authService.register(userData);\n      // After successful registration, automatically log in\n      await login(userData.email, userData.password);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = !!token && !!user;\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","useEffect","initAuth","storedToken","userProfile","authService","getProfile","error","removeItem","login","email","password","response","access_token","userData","setItem","register","logout","isAuthenticated","isAdmin","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/khali/OneDrive/Bureau/bna/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  role: 'client' | 'admin';\r\n  status: 'active' | 'inactive' | 'suspended';\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  address?: string;\r\n  dateOfBirth?: string;\r\n  nationalId?: string;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (storedToken) {\r\n        try {\r\n          const userProfile = await authService.getProfile();\r\n          setUser(userProfile);\r\n          setToken(storedToken);\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      const { access_token, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      setToken(access_token);\r\n      setUser(userData);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      await authService.register(userData);\r\n      // After successful registration, automatically log in\r\n      await login(userData.email, userData.password);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = !!token && !!user;\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    token,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n    isAuthenticated,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiC9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACI,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgBgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAChF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5CoB,SAAS,CAAC,MAAM;IACd,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,WAAW,GAAGN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAIK,WAAW,EAAE;QACf,IAAI;UACF,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACC,UAAU,CAAC,CAAC;UAClDZ,OAAO,CAACU,WAAW,CAAC;UACpBR,QAAQ,CAACO,WAAW,CAAC;QACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;UAChCZ,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF;MACAI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDE,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACI,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACzD,MAAM;QAAEE,YAAY;QAAEpB,IAAI,EAAEqB;MAAS,CAAC,GAAGF,QAAQ;MAEjDf,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3CjB,QAAQ,CAACiB,YAAY,CAAC;MACtBnB,OAAO,CAACoB,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAOF,QAAsB,IAAK;IACjD,IAAI;MACF,MAAMT,WAAW,CAACW,QAAQ,CAACF,QAAQ,CAAC;MACpC;MACA,MAAML,KAAK,CAACK,QAAQ,CAACJ,KAAK,EAAEI,QAAQ,CAACH,QAAQ,CAAC;IAChD,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnBpB,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCZ,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMwB,eAAe,GAAG,CAAC,CAACvB,KAAK,IAAI,CAAC,CAACF,IAAI;EACzC,MAAM0B,OAAO,GAAG,CAAA1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2B,IAAI,MAAK,OAAO;EAEtC,MAAMC,KAAsB,GAAG;IAC7B5B,IAAI;IACJE,KAAK;IACLc,KAAK;IACLO,QAAQ;IACRC,MAAM;IACNlB,OAAO;IACPmB,eAAe;IACfC;EACF,CAAC;EAED,oBACEpC,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAChCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClC,GAAA,CAxEWF,YAAyC;AAAAqC,EAAA,GAAzCrC,YAAyC;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}