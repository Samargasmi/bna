{"ast":null,"code":"import api from './authService.ts';\nexport const clientService = {\n  async getProfile() {\n    const response = await api.get('/clients/profile');\n    return response.data;\n  },\n  async updateProfile(userData) {\n    const response = await api.put('/clients/profile', userData);\n    return response.data;\n  },\n  async getAccounts() {\n    const response = await api.get('/clients/accounts');\n    return response.data;\n  },\n  async getAccountSummary() {\n    const response = await api.get('/clients/accounts/summary');\n    return response.data;\n  },\n  async getAccountById(accountId) {\n    const response = await api.get(`/clients/accounts/${accountId}`);\n    return response.data;\n  },\n  async createAccount(accountData) {\n    const response = await api.post('/clients/accounts', accountData);\n    return response.data;\n  },\n  async getTransactions(filters) {\n    const response = await api.get('/clients/transactions', {\n      params: filters\n    });\n    return response.data;\n  },\n  async getTransactionSummary(accountId, period) {\n    const response = await api.get('/clients/transactions/summary', {\n      params: {\n        accountId,\n        period\n      }\n    });\n    return response.data;\n  },\n  async getTransactionById(transactionId) {\n    const response = await api.get(`/clients/transactions/${transactionId}`);\n    return response.data;\n  },\n  async createTransaction(transactionData) {\n    const response = await api.post('/clients/transactions', transactionData);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","clientService","getProfile","response","get","data","updateProfile","userData","put","getAccounts","getAccountSummary","getAccountById","accountId","createAccount","accountData","post","getTransactions","filters","params","getTransactionSummary","period","getTransactionById","transactionId","createTransaction","transactionData"],"sources":["C:/Users/khali/OneDrive/Bureau/bna/frontend/src/services/clientService.ts"],"sourcesContent":["import api from './authService.ts';\r\n\r\nexport const clientService = {\r\n  async getProfile() {\r\n    const response = await api.get('/clients/profile');\r\n    return response.data;\r\n  },\r\n\r\n  async updateProfile(userData: any) {\r\n    const response = await api.put('/clients/profile', userData);\r\n    return response.data;\r\n  },\r\n\r\n  async getAccounts() {\r\n    const response = await api.get('/clients/accounts');\r\n    return response.data;\r\n  },\r\n\r\n  async getAccountSummary() {\r\n    const response = await api.get('/clients/accounts/summary');\r\n    return response.data;\r\n  },\r\n\r\n  async getAccountById(accountId: string) {\r\n    const response = await api.get(`/clients/accounts/${accountId}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createAccount(accountData: any) {\r\n    const response = await api.post('/clients/accounts', accountData);\r\n    return response.data;\r\n  },\r\n\r\n  async getTransactions(filters?: any) {\r\n    const response = await api.get('/clients/transactions', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  async getTransactionSummary(accountId?: string, period?: string) {\r\n    const response = await api.get('/clients/transactions/summary', {\r\n      params: { accountId, period },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  async getTransactionById(transactionId: string) {\r\n    const response = await api.get(`/clients/transactions/${transactionId}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createTransaction(transactionData: any) {\r\n    const response = await api.post('/clients/transactions', transactionData);\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAElC,OAAO,MAAMC,aAAa,GAAG;EAC3B,MAAMC,UAAUA,CAAA,EAAG;IACjB,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,aAAaA,CAACC,QAAa,EAAE;IACjC,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACQ,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAAC;IAC5D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMI,WAAWA,CAAA,EAAG;IAClB,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMK,iBAAiBA,CAAA,EAAG;IACxB,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,2BAA2B,CAAC;IAC3D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,cAAcA,CAACC,SAAiB,EAAE;IACtC,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,qBAAqBQ,SAAS,EAAE,CAAC;IAChE,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMQ,aAAaA,CAACC,WAAgB,EAAE;IACpC,MAAMX,QAAQ,GAAG,MAAMH,GAAG,CAACe,IAAI,CAAC,mBAAmB,EAAED,WAAW,CAAC;IACjE,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMW,eAAeA,CAACC,OAAa,EAAE;IACnC,MAAMd,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,uBAAuB,EAAE;MAAEc,MAAM,EAAED;IAAQ,CAAC,CAAC;IAC5E,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMc,qBAAqBA,CAACP,SAAkB,EAAEQ,MAAe,EAAE;IAC/D,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,+BAA+B,EAAE;MAC9Dc,MAAM,EAAE;QAAEN,SAAS;QAAEQ;MAAO;IAC9B,CAAC,CAAC;IACF,OAAOjB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMgB,kBAAkBA,CAACC,aAAqB,EAAE;IAC9C,MAAMnB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,yBAAyBkB,aAAa,EAAE,CAAC;IACxE,OAAOnB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMkB,iBAAiBA,CAACC,eAAoB,EAAE;IAC5C,MAAMrB,QAAQ,GAAG,MAAMH,GAAG,CAACe,IAAI,CAAC,uBAAuB,EAAES,eAAe,CAAC;IACzE,OAAOrB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}